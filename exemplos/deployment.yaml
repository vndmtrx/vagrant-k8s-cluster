# https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    app: nginx-deployment
spec:
  replicas: 4
  selector:
    matchLabels:
      replicaset: nginx-deployment
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        replicaset: nginx-deployment
    spec:
      volumes:
      - name: html
        emptyDir: {}
      containers:
      - name: nginx-container
        image: nginx
        volumeMounts:
        - name: html
          mountPath: /usr/share/nginx/html
        ports:
        - containerPort: 80
      - name: bash-container
        image: bash
        volumeMounts:
        - name: html
          mountPath: /html
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_UID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        command: ["/usr/local/bin/bash", "-c"]
        args:
          - while true; do
              printf "Pod Name = $POD_NAME<br/>\n" > /html/index.html ;
              printf "Pod UID = $POD_UID<br/>\n" >> /html/index.html ;
              printf "Pod Namespace = $POD_NAMESPACE<br/>\n" >> /html/index.html ;
              printf "Pod Node = $NODE_NAME<br/>\n" >> /html/index.html ;
              date >> /html/index.html ;
              sleep 1 ;
            done
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  labels:
    app: nginx-deployment
spec:
  selector:
    replicaset: nginx-deployment
  type: NodePort
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
      nodePort: 32080
